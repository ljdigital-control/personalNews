document.addEventListener("DOMContentLoaded",function(){function e(e,t){e.classList.add(t)}function t(e,t){e.classList.remove(t)}function n(e,t){window.scrollTo(e,t)}function l(){var t=document.getElementsByTagName("body")[0];e(t,"js")}function o(e){var t=document.getElementsByClassName(e);for(i=0;i<t.length;i++)t[i].onclick=function(e){var t=this.getAttribute("data-target");c(t,e)}}function c(n,l){var o=document.getElementById(n);o.classList.contains("js-visible")?(e(o,"js-hidden"),t(o,"js-visible"),t(B,"js-fx")):(t(o,"js-hidden"),e(o,"js-visible"),e(B,"js-fx")),I("content"),l.preventDefault()}function a(e,t,n){a=document.getElementById(e),a.classList.add("sticky"),stickyHeight=a.clientHeight+"px",document.getElementById(t).style.setProperty(n,stickyHeight)}function m(e){overlayElement=document.getElementById(e),overlayElement.style.top=stickyHeight}function s(n){var l="themeswitch.php?theme=",o=document.getElementsByTagName("html")[0];switchingElement=document.getElementById(n),switchingElement.onclick=function(){xmlhttp=new XMLHttpRequest,this.checked?(e(o,v),t(o,E),xmlhttp.open("GET",l+v,!0),xmlhttp.send(),localStorage.setItem("theme",v),console.log("localStorage Theme is: "+v)):(e(o,E),t(o,v),xmlhttp.open("GET","themeswitch.php?theme="+E,!0),xmlhttp.send(),localStorage.setItem("theme",E),console.log("localStorage Theme is: "+E))}}function d(e){elementContainer=document.getElementById(e),elementContainer.addEventListener("click",r,!1)}function r(e){e.target!==e.currentTarget&&(channelLink=e.target.getAttribute("href"),t(B,"js-fx"),u(channelLink),e.preventDefault()),e.stopPropagation()}function u(l){if(""===l){var o=localStorage.getItem("channel");if(null!==o)var l=o}document.getElementById(x).classList.remove("js-hidden"),renderFile="render-feeds.php",xmlhttp=new XMLHttpRequest,xmlhttp.open("GET",renderFile+l,!0),xmlhttp.send(),overlayContainer=document.getElementById("application-overlay"),e(overlayContainer,"js-hidden"),I("content"),xmlhttp.onreadystatechange=function(){4===xmlhttp.readyState&&xmlhttp.readyState&&(outputContainer=document.getElementById("content"),outputContainer.innerHTML=xmlhttp.response,document.getElementById(x).classList.add("js-hidden"),t(elementToFix,"js-fixed"),document.getElementById("application-overlay").classList.remove("js-visible"),n(0,0),localStorage.setItem("channel",l),y("#feed-items li"),f(g()),h(p("#feed-items li")))}}function g(){return lastReadItemId=localStorage.getItem("lastReadItem"),null!==lastReadItemId||(lastReadItemId=p("#feed-items li")),lastReadItemId}function h(e){localStorage.setItem("lastReadItem",e)}function p(e){return elementId=document.querySelector(e).id,h(elementId),elementId}function f(e){var t=document.getElementById(e).offsetTop,l=document.getElementById("application-header").clientHeight;n(0,t-l)}function y(e){var t=document.querySelectorAll(e);for(i=0;i<t.length;i++)t[i].onclick=function(e){h(this.id)}}function I(l){elementToFix=document.getElementById(l),scrollY=window.pageYOffset,elementToFix.classList.contains("js-fixed")?(t(elementToFix,"js-fixed"),elementToFix.style.top="",n(0,scrollYMem)):(e(elementToFix,"js-fixed"),elementToFix.style.top="-"+scrollY+"px",scrollYMem=scrollY),console.log(scrollYMem)}var E="light",v="dark",x="application-loading",B=document.getElementsByTagName("body")[0],T=localStorage.getItem("theme"),j=document.getElementsByTagName("html")[0];console.log(T),null!==T&&(t(j,E),t(j,v),e(j,T),T===E&&(document.getElementById("theme-switcher").checked=!1),T===v&&(document.getElementById("theme-switcher").checked=!0)),l(),u(""),a("application-header","content","margin-top"),s("theme-switcher"),o("js-overlay-toggle"),m("application-overlay"),d("channels")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJhZGRDbGFzcyIsImVsZW1lbnQiLCJjbGFzc05hbWUiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmVDbGFzcyIsInJlbW92ZSIsInNjcm9sbFRvVGFyZ2V0IiwieCIsInkiLCJ3aW5kb3ciLCJzY3JvbGxUbyIsInNldEpzIiwiYm9keSIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiaGFuZGxlT3ZlcmxheVRyaWdnZXJzIiwiZWxlbWVudENsYXNzTmFtZSIsImVsZW1lbnRzIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImkiLCJsZW5ndGgiLCJvbmNsaWNrIiwiZXZlbnQiLCJ0YXJnZXQiLCJ0aGlzIiwiZ2V0QXR0cmlidXRlIiwidG9nZ2xlT3ZlcmxheSIsImVsZW1lbnRJZCIsInRhcmdldEVsZW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNvbnRhaW5zIiwiZWZmZWN0Q2xhc3NBcHBseVRvIiwiZml4RWxlbWVudCIsInByZXZlbnREZWZhdWx0Iiwic3RpY2t5RWxlbWVudCIsInN0aWNreUlkIiwiY29tcGVuc2F0ZUlkIiwiY29tcGVuc2F0ZVByb3BlcnR5Iiwic3RpY2t5SGVpZ2h0IiwiY2xpZW50SGVpZ2h0Iiwic3R5bGUiLCJzZXRQcm9wZXJ0eSIsInBsYWNlT3ZlcmxheSIsIm92ZXJsYXlFbGVtZW50IiwidG9wIiwidGhlbWVTd2l0Y2giLCJyZW5kZXJGaWxlIiwiYXBwbHlUaGVtZUNsYXNzVG8iLCJzd2l0Y2hpbmdFbGVtZW50IiwieG1saHR0cCIsIlhNTEh0dHBSZXF1ZXN0IiwiY2hlY2tlZCIsInRoZW1lRGFyayIsInRoZW1lTGlnaHQiLCJvcGVuIiwic2VuZCIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJjb25zb2xlIiwibG9nIiwiY2hhbm5lbFN3aXRjaCIsImVsZW1lbnRDb250YWluZXIiLCJzd2l0Y2hDaGFubmVsIiwiZSIsImN1cnJlbnRUYXJnZXQiLCJjaGFubmVsTGluayIsImFqYXhSZXF1ZXN0Iiwic3RvcFByb3BhZ2F0aW9uIiwic2F2ZWRMb2NhbFN0b3JhZ2VDaGFubmVsIiwiZ2V0SXRlbSIsImVsZW1lbnRUb1RvZ2dsZU9uTG9hZCIsIm92ZXJsYXlDb250YWluZXIiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwib3V0cHV0Q29udGFpbmVyIiwiaW5uZXJIVE1MIiwicmVzcG9uc2UiLCJlbGVtZW50VG9GaXgiLCJjbGlja0ZlZWRJdGVtIiwic2Nyb2xsSW50b1ZpZXciLCJnZXRMYXN0UmVhZEl0ZW1JZCIsInNldExhc3RSZWFkSXRlbUlkIiwiZ2V0SWRGcm9tRWxlbWVudCIsImxhc3RSZWFkSXRlbUlkIiwic2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yIiwiaWQiLCJzY3JvbGxQb3NpdGlvblkiLCJvZmZzZXRUb3AiLCJzdGlja09mZnNldCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzY3JvbGxZIiwicGFnZVlPZmZzZXQiLCJzY3JvbGxZTWVtIiwic2F2ZWRMb2NhbFN0b3JhZ2VUaGVtZSJdLCJtYXBwaW5ncyI6IkFBQ0FBLFNBQVNDLGlCQUFpQixtQkFBb0IsV0FTNUMsUUFBU0MsR0FBU0MsRUFBUUMsR0FDekJELEVBQVFFLFVBQVVDLElBQUlGLEdBRXZCLFFBQVNHLEdBQVlKLEVBQVFDLEdBQzVCRCxFQUFRRSxVQUFVRyxPQUFPSixHQUkxQixRQUFTSyxHQUFlQyxFQUFFQyxHQUN6QkMsT0FBT0MsU0FBU0gsRUFBRUMsR0FJbkIsUUFBU0csS0FDUixHQUFJQyxHQUFPZixTQUFTZ0IscUJBQXFCLFFBQVEsRUFDakRkLEdBQVNhLEVBQUssTUFNZixRQUFTRSxHQUFzQkMsR0FDOUIsR0FBSUMsR0FBV25CLFNBQVNvQix1QkFBdUJGLEVBQy9DLEtBQUlHLEVBQUUsRUFBR0EsRUFBSUYsRUFBU0csT0FBUUQsSUFDN0JGLEVBQVNFLEdBQUdFLFFBQVUsU0FBU0MsR0FDOUIsR0FBSUMsR0FBU0MsS0FBS0MsYUFBYSxjQUMvQkMsR0FB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LElBQTJCekMsSUFDN0J2RCxTQUFTK0IsZUFBZSxrQkFBa0JzQixTQUFVLEdBRWxEMkMsSUFBMkIxQyxJQUM3QnRELFNBQVMrQixlQUFlLGtCQUFrQnNCLFNBQVUsSUErSXREdkMsSUFHQXNELEVBQVksSUFHWmhDLEVBQWMscUJBQXFCLFVBQVUsY0FHN0NXLEVBQVksa0JBR1o5QixFQUFzQixxQkFHdEIyQixFQUFhLHVCQUdia0IsRUFBYyIsImZpbGUiOiJzY3JpcHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpcyB0aGUgRE9NIHJlYWR5IGZvciBtYW5pcHVsYXRpb24/XG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24oKSB7XG5cblx0XHQvLyAtLS0tIHZhcmlhYmxlcyAtLS0tXG5cdFx0dmFyIHRoZW1lTGlnaHQgPSAnbGlnaHQnO1xuXHRcdHZhciB0aGVtZURhcmsgPSAnZGFyayc7XG5cdFx0dmFyIGVsZW1lbnRUb1RvZ2dsZU9uTG9hZCA9ICdhcHBsaWNhdGlvbi1sb2FkaW5nJztcblx0XHR2YXIgZWZmZWN0Q2xhc3NBcHBseVRvID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXTtcblxuXHRcdC8vIGhlbHBlcjogY2hhbmdlIGNsYXNzZXNcblx0XHRmdW5jdGlvbiBhZGRDbGFzcyhlbGVtZW50LGNsYXNzTmFtZSkge1xuXHRcdFx0ZWxlbWVudC5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG5cdFx0fVxuXHRcdGZ1bmN0aW9uIHJlbW92ZUNsYXNzKGVsZW1lbnQsY2xhc3NOYW1lKSB7XG5cdFx0XHRlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lKTtcblx0XHR9XG5cblx0XHQvLyBoZWxwZXI6IHNjcm9sbCB0byBkZXNpcmVkIHBvc2l0aW9uXG5cdFx0ZnVuY3Rpb24gc2Nyb2xsVG9UYXJnZXQoeCx5KSB7XG5cdFx0XHR3aW5kb3cuc2Nyb2xsVG8oeCx5KTtcblx0XHR9XG5cblx0XHQvLyBhZGQgSlMgdG8gYm9keS10YWcgdG8gYWxsb3cgQ1NTLU1hbmlwdWxhdGlvbiBpZiBKUyBpcyBhdmFpbGFibGVcblx0XHRmdW5jdGlvbiBzZXRKcygpIHtcblx0XHRcdHZhciBib2R5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJib2R5XCIpWzBdO1xuXHRcdFx0YWRkQ2xhc3MoYm9keSwnanMnKTtcblx0XHR9XG5cblx0XHQvLyAtLS0tIGdsb2JhbCBmdW5jdGlvbnMgLS0tLVxuXG5cdFx0Ly8gT3ZlcmxheS1IYW5kbGluZ1xuXHRcdGZ1bmN0aW9uIGhhbmRsZU92ZXJsYXlUcmlnZ2VycyhlbGVtZW50Q2xhc3NOYW1lKSB7XG5cdFx0XHR2YXIgZWxlbWVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGVsZW1lbnRDbGFzc05hbWUpO1xuXHRcdFx0Zm9yKGk9MDsgaSA8IGVsZW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGVsZW1lbnRzW2ldLm9uY2xpY2sgPSBmdW5jdGlvbihldmVudCkge1xuXHRcdFx0XHRcdHZhciB0YXJnZXQgPSB0aGlzLmdldEF0dHJpYnV0ZSgnZGF0YS10YXJnZXQnKTtcblx0XHRcdFx0XHR0b2dnbGVPdmVybGF5KHRhcmdldCxldmVudCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0ZnVuY3Rpb24gdG9nZ2xlT3ZlcmxheShlbGVtZW50SWQsZXZlbnQpIHtcblx0XHRcdHZhciB0YXJnZXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWxlbWVudElkKTtcblx0XHRcdHZhciBmaXhFbGVtZW50SWQgPSAnY29udGVudCc7XG5cdFx0XHRpZih0YXJnZXRFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnanMtdmlzaWJsZScpKSB7XG5cdFx0XHRcdGFkZENsYXNzKHRhcmdldEVsZW1lbnQsJ2pzLWhpZGRlbicpO1xuXHRcdFx0XHRyZW1vdmVDbGFzcyh0YXJnZXRFbGVtZW50LCdqcy12aXNpYmxlJyk7XG5cdFx0XHRcdHJlbW92ZUNsYXNzKGVmZmVjdENsYXNzQXBwbHlUbywnanMtZngnKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJlbW92ZUNsYXNzKHRhcmdldEVsZW1lbnQsJ2pzLWhpZGRlbicpO1xuXHRcdFx0XHRhZGRDbGFzcyh0YXJnZXRFbGVtZW50LCdqcy12aXNpYmxlJyk7XG5cdFx0XHRcdGFkZENsYXNzKGVmZmVjdENsYXNzQXBwbHlUbywnanMtZngnKTtcblx0XHRcdH1cblx0XHRcdGZpeEVsZW1lbnQoJ2NvbnRlbnQnKTtcblx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0fVxuXG5cdFx0Ly8gbWFrZSBlbGVtZW50IHN0aWNreSAodmlhIHBvc2l0aW9uIGluIGNzcylcblx0XHRmdW5jdGlvbiBzdGlja3lFbGVtZW50KHN0aWNreUlkLGNvbXBlbnNhdGVJZCxjb21wZW5zYXRlUHJvcGVydHkpIHtcblx0XHRcdHN0aWNreUVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChzdGlja3lJZCk7XG5cdFx0XHRzdGlja3lFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3N0aWNreScpO1xuXHRcdFx0c3RpY2t5SGVpZ2h0ID0gc3RpY2t5RWxlbWVudC5jbGllbnRIZWlnaHQgKyAncHgnO1xuXG5cdFx0XHQvL2FkZCBFbGVtZW50LUhlaWdodCBhcyBkZWZpbmVkIHByb3BlcnR5IHRvIGRlc2lyZWQgZWxlbWVudFxuXHRcdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY29tcGVuc2F0ZUlkKS5zdHlsZS5zZXRQcm9wZXJ0eShjb21wZW5zYXRlUHJvcGVydHksc3RpY2t5SGVpZ2h0KTtcblx0XHR9XG5cblx0XHQvLyBwbGFjZSBFbGVtZW50IGluIHJlbGF0aW9uIHRvIHN0aWNreSBlbGVtZW50XG5cdFx0ZnVuY3Rpb24gcGxhY2VPdmVybGF5KGVsZW1lbnRJZCkge1xuXHRcdFx0b3ZlcmxheUVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbGVtZW50SWQpO1xuXHRcdFx0b3ZlcmxheUVsZW1lbnQuc3R5bGUudG9wID0gc3RpY2t5SGVpZ2h0O1xuXHRcdH1cblxuXHRcdC8vIC0tLS0gdGhlbWUtc3dpdGNoaW5nIC0tLS1cblx0XHQvLyBjaGVjayBpZiBsb2NhbFN0b3JhZ2UgaXMgZmlsbGVkIGFuZCBzZXQgYm9keS5jbGFzcyB3aXRoIGl0LiBUaGlzIGlzIHVzZWZ1bCwgaWYgdGhlIHNpdGUgcnVucyBhcyBhcHBcblx0XHR2YXIgc2F2ZWRMb2NhbFN0b3JhZ2VUaGVtZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0aGVtZScpO1xuXHRcdHZhciBhcHBseVRoZW1lQ2xhc3NUbyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdodG1sJylbMF07XG5cdFx0Y29uc29sZS5sb2coc2F2ZWRMb2NhbFN0b3JhZ2VUaGVtZSk7XG5cdFx0aWYoc2F2ZWRMb2NhbFN0b3JhZ2VUaGVtZSAhPT0gbnVsbCkge1xuXHRcdFx0cmVtb3ZlQ2xhc3MoYXBwbHlUaGVtZUNsYXNzVG8sIHRoZW1lTGlnaHQpO1xuXHRcdFx0cmVtb3ZlQ2xhc3MoYXBwbHlUaGVtZUNsYXNzVG8sIHRoZW1lRGFyayk7XG5cdFx0XHRhZGRDbGFzcyhhcHBseVRoZW1lQ2xhc3NUbyxzYXZlZExvY2FsU3RvcmFnZVRoZW1lKTtcblx0XHRcdGlmKHNhdmVkTG9jYWxTdG9yYWdlVGhlbWUgPT09IHRoZW1lTGlnaHQpIHtcblx0XHRcdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RoZW1lLXN3aXRjaGVyJykuY2hlY2tlZCA9IGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0aWYoc2F2ZWRMb2NhbFN0b3JhZ2VUaGVtZSA9PT0gdGhlbWVEYXJrKSB7XG5cdFx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aGVtZS1zd2l0Y2hlcicpLmNoZWNrZWQgPSB0cnVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIHN3aXRjaCB0aGVtZSBieSBhZGRpbmcgYW5kIHJlbW92aW5nIGNsYXNzZXMgdG8gYm9keVxuXHRcdGZ1bmN0aW9uIHRoZW1lU3dpdGNoKGVsZW1lbnRJZCkge1xuXHRcdFx0dmFyIHJlbmRlckZpbGUgPSAndGhlbWVzd2l0Y2gucGhwP3RoZW1lPSc7XG5cdFx0XHR2YXIgYXBwbHlUaGVtZUNsYXNzVG8gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaHRtbCcpWzBdO1xuXG5cdFx0XHRzd2l0Y2hpbmdFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWxlbWVudElkKTtcblx0XHRcdHN3aXRjaGluZ0VsZW1lbnQub25jbGljayA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR4bWxodHRwID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cdFx0XHRcdGlmICh0aGlzLmNoZWNrZWQpIHtcblx0XHRcdFx0XHRhZGRDbGFzcyhhcHBseVRoZW1lQ2xhc3NUbywgdGhlbWVEYXJrKTtcblx0XHRcdFx0XHRyZW1vdmVDbGFzcyhhcHBseVRoZW1lQ2xhc3NUbywgdGhlbWVMaWdodCk7XG5cdFx0XHRcdFx0eG1saHR0cC5vcGVuKCdHRVQnLHJlbmRlckZpbGUrdGhlbWVEYXJrLHRydWUpO1xuXHRcdFx0XHRcdHhtbGh0dHAuc2VuZCgpO1xuXHRcdFx0XHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0aGVtZScsIHRoZW1lRGFyayk7XG5cdFx0XHRcdFx0Y29uc29sZS5sb2coJ2xvY2FsU3RvcmFnZSBUaGVtZSBpczogJyArIHRoZW1lRGFyayk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0YWRkQ2xhc3MoYXBwbHlUaGVtZUNsYXNzVG8sIHRoZW1lTGlnaHQpO1xuXHRcdFx0XHRcdHJlbW92ZUNsYXNzKGFwcGx5VGhlbWVDbGFzc1RvLCB0aGVtZURhcmspO1xuXHRcdFx0XHRcdHhtbGh0dHAub3BlbignR0VUJywndGhlbWVzd2l0Y2gucGhwP3RoZW1lPScrdGhlbWVMaWdodCx0cnVlKTtcblx0XHRcdFx0XHR4bWxodHRwLnNlbmQoKTtcblx0XHRcdFx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGhlbWUnLCB0aGVtZUxpZ2h0KTtcblx0XHRcdFx0XHRjb25zb2xlLmxvZygnbG9jYWxTdG9yYWdlIFRoZW1lIGlzOiAnICsgdGhlbWVMaWdodCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyAtLS0tIExvYWRpbmcgRmVlZHMgKHZpYSBBamF4KSAtLS0tXG5cdFx0Ly8gYWRkIGxpc3RlbmVyXG5cdFx0ZnVuY3Rpb24gY2hhbm5lbFN3aXRjaChlbGVtZW50SWQpIHtcblx0XHRcdGVsZW1lbnRDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbGVtZW50SWQpO1xuXHRcdFx0ZWxlbWVudENvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHN3aXRjaENoYW5uZWwsIGZhbHNlKTtcblx0XHR9XG5cblx0XHQvLyBwcmVwYXJlIGxvYWRpbmcgYWZ0ZXIgY2xpY2tcblx0XHRmdW5jdGlvbiBzd2l0Y2hDaGFubmVsKGUpIHtcblx0XHRcdGlmIChlLnRhcmdldCAhPT0gZS5jdXJyZW50VGFyZ2V0KSB7XG5cdFx0XHRcdGNoYW5uZWxMaW5rID0gZS50YXJnZXQuZ2V0QXR0cmlidXRlKCdocmVmJyk7XG5cdFx0XHRcdHJlbW92ZUNsYXNzKGVmZmVjdENsYXNzQXBwbHlUbywnanMtZngnKTtcblx0XHRcdFx0YWpheFJlcXVlc3QoY2hhbm5lbExpbmspO1xuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHR9XG5cdFx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdH1cblxuXHRcdC8vIGxvYWRpbmcgdGhlIGNvbnRlbnRcblx0XHRmdW5jdGlvbiBhamF4UmVxdWVzdChjaGFubmVsTGluaykge1xuXHRcdFx0Ly8gaWYgdGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgd2l0aCBubyBwYXJhbWV0ZXIsIHdlJ3JlIGNoZW5ja2luZyB0aGUgbG9jYWxTdG9yYWcsIGlmIG9uZSBpcyBwcmVzZW50IGFuZCB1c2UgdGhpcyAodXNlZnVsIGZvciBpbml0aWFsIGxvYWQpXG5cdFx0XHRpZihjaGFubmVsTGluayA9PT0gJycpIHtcblx0XHRcdFx0dmFyIHNhdmVkTG9jYWxTdG9yYWdlQ2hhbm5lbCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjaGFubmVsJyk7XG5cdFx0XHRcdGlmKHNhdmVkTG9jYWxTdG9yYWdlQ2hhbm5lbCAhPT0gbnVsbCkge1xuXHRcdFx0XHRcdHZhciBjaGFubmVsTGluayA9IHNhdmVkTG9jYWxTdG9yYWdlQ2hhbm5lbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyByZXF1ZXN0aW5nIHRoZSBjb250ZW50XG5cdFx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbGVtZW50VG9Ub2dnbGVPbkxvYWQpLmNsYXNzTGlzdC5yZW1vdmUoJ2pzLWhpZGRlbicpO1xuXHRcdFx0cmVuZGVyRmlsZSA9ICdyZW5kZXItZmVlZHMucGhwJztcblx0XHRcdHhtbGh0dHAgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblx0XHRcdHhtbGh0dHAub3BlbignR0VUJyxyZW5kZXJGaWxlK2NoYW5uZWxMaW5rLHRydWUpO1xuXHRcdFx0eG1saHR0cC5zZW5kKCk7XG5cblx0XHRcdG92ZXJsYXlDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwbGljYXRpb24tb3ZlcmxheScpO1xuXHRcdFx0YWRkQ2xhc3Mob3ZlcmxheUNvbnRhaW5lciwnanMtaGlkZGVuJyk7XG5cdFx0XHRmaXhFbGVtZW50KCdjb250ZW50Jyk7XG5cblxuXHRcdFx0Ly8gb3V0cHV0IGlmIGNhbGwgaXMgc3VjY2VzZnVsXG5cdFx0XHR4bWxodHRwLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoeG1saHR0cC5yZWFkeVN0YXRlID09PSA0ICYmIHhtbGh0dHAucmVhZHlTdGF0ZSkge1xuXHRcdFx0XHRcdG91dHB1dENvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250ZW50Jyk7XG5cdFx0XHRcdFx0b3V0cHV0Q29udGFpbmVyLmlubmVySFRNTCA9IHhtbGh0dHAucmVzcG9uc2U7XG5cdFx0XHRcdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWxlbWVudFRvVG9nZ2xlT25Mb2FkKS5jbGFzc0xpc3QuYWRkKCdqcy1oaWRkZW4nKTtcblx0XHRcdFx0XHRyZW1vdmVDbGFzcyhlbGVtZW50VG9GaXgsJ2pzLWZpeGVkJyk7XG5cdFx0XHRcdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcGxpY2F0aW9uLW92ZXJsYXknKS5jbGFzc0xpc3QucmVtb3ZlKCdqcy12aXNpYmxlJyk7XG5cdFx0XHRcdFx0c2Nyb2xsVG9UYXJnZXQoMCwwKTtcblx0XHRcdFx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY2hhbm5lbCcsIGNoYW5uZWxMaW5rKTtcblxuXHRcdFx0XHRcdGNsaWNrRmVlZEl0ZW0oJyNmZWVkLWl0ZW1zIGxpJyk7XG5cdFx0XHRcdFx0c2Nyb2xsSW50b1ZpZXcoZ2V0TGFzdFJlYWRJdGVtSWQoKSk7XG5cdFx0XHRcdFx0c2V0TGFzdFJlYWRJdGVtSWQoZ2V0SWRGcm9tRWxlbWVudCgnI2ZlZWQtaXRlbXMgbGknKSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyAtLS0tIGhhbmRsZSBsYXN0IHJlYWQgaXRlbXNcblx0XHRmdW5jdGlvbiBnZXRMYXN0UmVhZEl0ZW1JZCgpIHtcblx0XHRcdGxhc3RSZWFkSXRlbUlkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2xhc3RSZWFkSXRlbScpO1xuXHRcdFx0aWYobGFzdFJlYWRJdGVtSWQgIT09IG51bGwpIHtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGxhc3RSZWFkSXRlbUlkID0gZ2V0SWRGcm9tRWxlbWVudCgnI2ZlZWQtaXRlbXMgbGknKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBsYXN0UmVhZEl0ZW1JZDtcblx0XHR9XG5cblx0XHRmdW5jdGlvbiBzZXRMYXN0UmVhZEl0ZW1JZChlbGVtZW50SWQpIHtcblx0XHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdsYXN0UmVhZEl0ZW0nLGVsZW1lbnRJZCk7XG5cdFx0fVxuXG5cdFx0ZnVuY3Rpb24gZ2V0SWRGcm9tRWxlbWVudChzZWxlY3Rvcikge1xuXHRcdFx0ZWxlbWVudElkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcikuaWQ7XG5cdFx0XHRzZXRMYXN0UmVhZEl0ZW1JZChlbGVtZW50SWQpO1xuXHRcdFx0cmV0dXJuIGVsZW1lbnRJZDtcblx0XHR9XG5cblx0XHRmdW5jdGlvbiBzY3JvbGxJbnRvVmlldyh0YXJnZXQpIHtcblx0XHRcdHZhciBzY3JvbGxQb3NpdGlvblkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0YXJnZXQpLm9mZnNldFRvcDtcblx0XHRcdHZhciBzdGlja09mZnNldCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHBsaWNhdGlvbi1oZWFkZXInKS5jbGllbnRIZWlnaHQ7XG5cdFx0XHRzY3JvbGxUb1RhcmdldCgwLHNjcm9sbFBvc2l0aW9uWSAtIHN0aWNrT2Zmc2V0KTtcblx0XHR9XG5cblx0XHRmdW5jdGlvbiBjbGlja0ZlZWRJdGVtKHNlbGVjdG9yKSB7XG5cdFx0XHR2YXIgZWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcblx0XHRcdGZvcihpPTA7IGkgPCBlbGVtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRlbGVtZW50c1tpXS5vbmNsaWNrID0gZnVuY3Rpb24oZXZlbnQpIHtcblx0XHRcdFx0XHRzZXRMYXN0UmVhZEl0ZW1JZCh0aGlzLmlkKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0fVxuXG5cdFx0Ly8gLS0tLSBmaXggZWxlbWVudCB0byBjdXJyZW50IHBvc2l0aW9uXG5cdFx0ZnVuY3Rpb24gZml4RWxlbWVudChlbGVtZW50SWQpIHtcblx0XHRcdGVsZW1lbnRUb0ZpeCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVsZW1lbnRJZCk7XG5cdFx0XHRzY3JvbGxZID0gd2luZG93LnBhZ2VZT2Zmc2V0O1xuXG5cdFx0XHRpZihlbGVtZW50VG9GaXguY2xhc3NMaXN0LmNvbnRhaW5zKCdqcy1maXhlZCcpKSB7XG5cdFx0XHRcdHJlbW92ZUNsYXNzKGVsZW1lbnRUb0ZpeCwnanMtZml4ZWQnKTtcblx0XHRcdFx0ZWxlbWVudFRvRml4LnN0eWxlLnRvcCA9ICcnO1xuXHRcdFx0XHRzY3JvbGxUb1RhcmdldCgwLHNjcm9sbFlNZW0pO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YWRkQ2xhc3MoZWxlbWVudFRvRml4LCdqcy1maXhlZCcpO1xuXHRcdFx0XHRlbGVtZW50VG9GaXguc3R5bGUudG9wID0gJy0nICsgc2Nyb2xsWSArICdweCc7XG5cdFx0XHRcdHNjcm9sbFlNZW0gPSBzY3JvbGxZO1xuXHRcdFx0fVxuXHRcdFx0Y29uc29sZS5sb2coc2Nyb2xsWU1lbSk7XG5cdFx0fVxuXG5cdFx0Ly8gLS0tLSBpbml0aWFsaXplIC0tLS1cblx0XHQvLyBzZXQgSnMgb24gYm9keSBpZiBKUyBpcyBhdmFpbGFibGVcblx0XHRzZXRKcygpO1xuXG5cdFx0Ly8gaW5pdGlhbCBsb2FkIG9mIGNvbnRlbnRcblx0XHRhamF4UmVxdWVzdCgnJyk7XG5cblx0XHQvL3N0aWNreSBoZWFkZXIgKGl0ZW0oaWQpIHRvIGZpeCwgaXRlbShpZCkgd2l0aCBwcm9wZXJ0eSB0byBjb21wZW5zYXRlIGZpeClcblx0XHRzdGlja3lFbGVtZW50KCdhcHBsaWNhdGlvbi1oZWFkZXInLCdjb250ZW50JywnbWFyZ2luLXRvcCcpO1xuXG5cdFx0Ly8gdGhlbWUgc3dpdGNoZXJcblx0XHR0aGVtZVN3aXRjaCgndGhlbWUtc3dpdGNoZXInKTtcblxuXHRcdC8vIE92ZXJsYXlzXG5cdFx0aGFuZGxlT3ZlcmxheVRyaWdnZXJzKCdqcy1vdmVybGF5LXRvZ2dsZScpO1xuXG5cdFx0Ly8gcGxhY2Ugb3ZlcmxheVxuXHRcdHBsYWNlT3ZlcmxheSgnYXBwbGljYXRpb24tb3ZlcmxheScpO1xuXG5cdFx0Ly8gc3dpdGNoIGNoYW5uZWxzXG5cdFx0Y2hhbm5lbFN3aXRjaCgnY2hhbm5lbHMnKTtcblxuXHR9KTtcbiJdLCJzb3VyY2VSb290IjoiLiJ9
